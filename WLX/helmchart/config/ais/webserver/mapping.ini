####################################################################################
# processMapping
#################################################################################### 
# Configures the relation between a defined Service name - in a Channel's 
# Service Provider and a specific Process Name - as configured in the Execution 
# Plan's "Run Service Process".
# Note: when running the Flow directly, use the Flow's name as the process name.
#
# Format:
# 	processMapping.<runtime-service-name>=<process-name>
# Example:
# 	processMapping.Service1 = Proc1
#
####################################################################################
# timeout
####################################################################################
# Defines a specific timeout for a Service, overriding the global timeout defined in 
# eh.ini parameter eh.timeout
#
# Format:
# 	timeout.<runtime-service-name> = <milliseconds>
# Example:
# 	timeout.Service1 = 50
#
####################################################################################
# poolSize
####################################################################################
# Defines a specific thread pool size for a specific Service, in addition to the 
# global pool size defined in the eh.ini parameter eh.poolSize 
#
# If timeout.<runtime-service-name> is set, this parameter is mandatory.
# Without a respective timeout.<runtime-service-name>, this parameter is ignored!
# 
# Format:
# 	poolSize.<runtime-service-name> = <number of flow threads in the pool>
# Example:
# 	poolSize.Service1 = 5
#
####################################################################################
# soapHeaderParam
####################################################################################
# For the specified Web-Service Provider, a Char parameter with this name will 
# recieve the entire SOAP header as string. The parameter will not be exposed via 
# the service method. 
#
# Format: 
# 	soapHeaderParam.<runtime-service-name>=<paramName>
# Example:
#	soapHeaderParam.Service1=Param1
####################################################################################
# errorCounter
#################################################################################### 
# errorCounter configuration allows Event Handler to count service errors separatly
# for different services. These counters will be enabled only in case in eh.ini
# the eh.errorCounter.behavior = 2. For each counter, state its process from above,
# and its windowSize and errorSize. In case one of them is omitted, the values
# from eh.ini, eh.heartbeat.windowSize and eh.heartbeat.errorSize will be used
# The counter will lock the heartbeat, when number of errors in windowSize>errorSize 
#
# Format:
# 	errorCounter.<runtime-service-name>.windowSize = <windowSize>
#	errorCounter.<runtime-service-name>.errorSize = <errorSize>
# Example:
# 	errorCounter.Service1.windowSize=1000
#	errorCounter.Service1.errorSize =500
#
####################################################################################
processMapping.RealTimeWSProvider=RealtimeWsProcess
processMapping.WatchListQueryService=WatchListQueryService
processMapping.RealTimeWSProvider_1=RealtimeWsProcess_1
processMapping.RealTimeWSProvider_2=RealtimeWsProcess_2
processMapping.RealTimeWSProvider_3=RealtimeWsProcess_3
processMapping.RealTimeWSProvider_4=RealtimeWsProcess_4
processMapping.RealTimeWSProvider_5=RealtimeWsProcess_5
processMapping.RealTimeWSProvider_6=RealtimeWsProcess_6
processMapping.RealTimeWSProvider_7=RealtimeWsProcess_7
timeout.WatchListQueryService=30000
poolSize.WatchListQueryService=5



processMapping.MSRealTimeWSProvider_1=RealtimeMSWS1
processMapping.MSRealTimeWSProvider_2=RealtimeMSWS2
processMapping.MSRealTimeWSProvider_3=RealtimeMSWS3
processMapping.MSRealTimeWSProvider_4=RealtimeMSWS4
processMapping.MSRealTimeWSProvider_5=RealtimeMSWS5
processMapping.MSRealTimeWSProvider_6=RealtimeMSWS6



processMapping.MSBlockMessageWSProvider=BlockMessageWS
processMapping.MSReleaseMessageWSProvider=ReleaseMessageWS