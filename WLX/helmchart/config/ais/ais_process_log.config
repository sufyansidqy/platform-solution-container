# AIS process log configuration file
# ----------------------------------

# Process Log:

# Set the maximum size that the output file is allowed to
# reach before being rolled over to backup files.
# The default maximum file size is 10MB.

MaxFileSize=10485760

# Set the maximum number of backup files to keep around.
# If MaxBackupIndex is equal to zero, then the File is
# truncated with no backup files created.
# There are 3 backup files by default.
# There can be not more than 13 backup files

MaxBackupIndex=3

# Set the message layout.
# The default is %m%n

layout.ConversionPattern=%m%n

# Access Log:

AccessLog.MaxFileSize=41943040
AccessLog.MaxBackupIndex=3
AccessLog.DisableProcesses=

# Debug Log:

#Use this key in order to select the Debug log Categories that will be enabled when running a process.
#You can use a list of Categories separated by semicolon. You can also use wild-cards. For example: Cat*.
#Note: the Categories will only affect the process after it is restarted or recompiled
DebugLogCategories=

# Use this key is order to select the processes for which the Debug logs are enabled. You can also use * to select all processes.
DebugProcesses=*


#===================================
# Profiler configurations
#===================================



# Use this key in order to activate a Profiler for a list of processes.
# You can use wild-cards and the word "ALL" for all processes.
# Syntax: <process-name> [,<another-process-name>, <ALL>, <*>]
# Example: Profiler.OnProcessFinish= myProc1, myProc2, "my proc 3", myProc*, ALL
# Note: The configuration only affect the process after it has restarted. If this is a service process then it is sufficient to recompile it.

Profiler.OnProcessFinish=


# Use this key in order to activate a Profiler with snapshots for a list of processes.
# You can use wild-cards and the word "ALL" for all processes.
# Syntax: <process-name>:<snapshot-interval> [,<another-process-name>:<interval>, <ALL>:<interval>, <*>:<interval>]
# Snapshot intervals are in seconds (0=disabled. A Profiler report will be generated only at the end of the process)
# Example: Profiler. Snapshot = myProc1:60, "my proc 3":600, otherProc*:600, ALL:60
# Note: The configuration only affect the process after it has restarted. If this is a service process then it is sufficient to recompile it.

Profiler.Snapshot=


# Use this key in order to activate a Profiler with slow transaction-level profiling for a list of processes.
# You can use wild-cards and the word "ALL" for all processes.
# Syntax: <process-name>:<txn-threshold> [,<another-process-name>:< threshold>, <ALL>:< threshold>, <*>:< threshold>]
# Slow transaction thresholds are in micro-seconds, 1,000,000 microseconds = 1 second (0=no threshold)
# Example: Profiler.SlowTransactionProfiler = myProc1:500000, "my proc 3":100000, OtherProc*:500000, ALL:500000
# Note: The configuration only affect the process after it has restarted. If this is a service process then it is sufficient to recompile it.

Profiler.SlowTransactionProfiler=


# Transaction Profiling:
# Note: The slow transaction profiling report ignores blocks that are executed in less than one microsecond. 
# Therefore, there may be a scenario where the number of flow blocks in the slow transaction profiling report is less than the configured value.
# The counter for the number of executed blocks counts all blocks, regardless of the time that they took to be executed.

TxnProfiling.NumSlowBlocks=5

# Java Blocks Profiling:
# Please specify 1 or 0 in order to enable or disable Java Blocks Profiling for all processes. This configuration only affects a process after it has restarted or recompiled.

Profiler.JavaBlockProfiler.Enabled=1

# Java Code Components Profiling:
# Syntax: [<fully-qualified-name>[,<another-fully-qualified-name>]]
# Note: This configuration affects java classes during class loading. Therefore, to apply a change of these configuration parameters on a process it should be set before starting the process, or the process should be restarted. Moreover, if "Java Class Loaders Lifetime Strategy" is configured to "Create-Once", then there is also a need to release java class loaders, before starting any process that needs to be profiled. If this is a service process then it is sufficient to recompile it after releasing the java class loaders.
# Note: The following packages are always excluded and no class or method from these packages can be Profiled: "sun", "com.sun", "java", "javax", "sunw".

Profiler.JavaBlockProfiler.Methods=
Profiler.JavaBlockProfiler.Classes=
Profiler.JavaBlockProfiler.Packages=
